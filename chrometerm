#!/usr/bin/env node
var app = require('http').createServer(handler);
var io = require('socket.io').listen(app, { log: false });
var fs = require('fs');
var util = require('util');
var cp = require('child_process');

app.listen(4109);

function handler (req, res) {
  res.end(404);
}

// must resume, paused by default
// process.stdin.resume();
// process.stdin.setEncoding('utf8');
// process.stdin.on('data', function(data) {
//   console.log(data);
// });

// process.stdout.on('data', function(data) {
//   console.log(data);
// });

io.sockets.on('connection', function (socket) {
  var puts = function(error, stdout, stderr) {
    if (stdout) {
      util.puts('out');
      util.puts(stdout);
      socket.emit('stdout', stdout);
    }
    if (stderr) {
      util.puts('err');
      util.puts(stderr);
      socket.emit('stderr', stderr);
    }
  };
  socket.on('input', function (data) {
    // do this better, with regexes and whitespace insignificant
    if (data.match(/cd /)) {
      var dir = data.split(' ')[1];
      if (dir === '~') {
        cp.exec('echo ' + dir, function(error, stdout, stderr) {
          console.log(stdout);
          try {
            process.chdir(stdout);
          }
          catch(e){}
        });
      }
      else {
        console.log(dir);
        console.log(__filename);
        try {
          process.chdir(dir);
        }
        catch(e){}
      }
    }
    else {
      cp.exec(data, puts);
    }
  });
});